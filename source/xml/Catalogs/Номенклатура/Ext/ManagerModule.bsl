Функция ОтправитьНаСайт(СсылкаНаОбъект, ПолнаяВыгрузка) Экспорт
	Если СсылкаНаОбъект.ЭтоГруппа Тогда
		Возврат web_Справочники.ОтправитьГруппуНоменклатуры(СсылкаНаОбъект, ПолнаяВыгрузка);
	КонецЕсли;
	Возврат web_Справочники.ОтправитьНоменклатуру(СсылкаНаОбъект, ПолнаяВыгрузка);
КонецФункции

Функция ПолучитьСвязанныеСсылки(СсылкаНаОбъект) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Родитель КАК Родитель,
		|	Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
		|	Номенклатура.ЭтоГруппа КАК ЭтоГруппа,
		|	Номенклатура.ИспользованиеХарактеристик КАК ИспользованиеХарактеристик,
		|	Номенклатура.ВидНоменклатуры.ВладелецХарактеристик КАК ВладелецХарактеристик,
		|	Номенклатура.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);

	СписокСсылок = Новый Соответствие;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		СписокСсылок.Вставить(СсылкаНаОбъект, 0);	
		Возврат СписокСсылок;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	МаксимальныйПриоритет = 0;
	web_ОбщегоНазначения.ЗаписатьЗависимыеСсылкиПоОбъекту(Выборка.Родитель, СписокСсылок, МаксимальныйПриоритет);
	Если Выборка.ЭтоГруппа Тогда
		СписокСсылок.Вставить(СсылкаНаОбъект, МаксимальныйПриоритет + 1);
		Возврат СписокСсылок;
	КонецЕсли;
	
	web_ОбщегоНазначения.ЗаписатьЗависимыеСсылкиПоОбъекту(Выборка.ВидНоменклатуры, СписокСсылок, МаксимальныйПриоритет);
	
	Приоритет = МаксимальныйПриоритет + 1; 
	
	СписокСсылок.Вставить(СсылкаНаОбъект, Приоритет);
	ВставитьХарактеристики(Выборка, СписокСсылок, Приоритет);
	ВставитьПрисоединенныеФайлы(СсылкаНаОбъект, СписокСсылок, Приоритет);
	
	Возврат СписокСсылок;
КонецФункции


Процедура ВставитьХарактеристики(ВыборкаНоменклатуры, СписокПриемник, Приоритет)
	Если ВыборкаНоменклатуры.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры Тогда
		ВладелецХарактеристик = ВыборкаНоменклатуры.Ссылка;	
	ИначеЕсли ВыборкаНоменклатуры.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры Тогда	
		ВладелецХарактеристик = ВыборкаНоменклатуры.ВидНоменклатуры;	
	ИначеЕсли ВыборкаНоменклатуры.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры Тогда	
		ВладелецХарактеристик = ВыборкаНоменклатуры.ВладелецХарактеристик;
	Иначе
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец = &Владелец";
	Запрос.УстановитьПараметр("Владелец", ВладелецХарактеристик);
	РезультатЗапроса = Запрос.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;                                        
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокПриемник.Вставить(Выборка.Ссылка, Приоритет + 1);	
	КонецЦикла;
КонецПроцедуры

Процедура ВставитьПрисоединенныеФайлы(ВладелецФайла, СписокПриемник, Приоритет)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НоменклатураПрисоединенныеФайлы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
	|ГДЕ
	|	НоменклатураПрисоединенныеФайлы.ВладелецФайла = &ВладелецФайла";
	Запрос.УстановитьПараметр("ВладелецФайла", ВладелецФайла);
	РезультатЗапроса = Запрос.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;                                        
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокПриемник.Вставить(Выборка.Ссылка, Приоритет + 1);	
	КонецЦикла;	
КонецПроцедуры