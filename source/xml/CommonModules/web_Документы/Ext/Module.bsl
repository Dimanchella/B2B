#Область Orders

Функция ОтправитьЗаказ(СсылкаНаОбъект, ПолнаяВыгрузка) Экспорт
	Возврат web_Обмен.ОтправитьОбъектНаСайт(
		"orders", 
		СсылкаНаОбъект, 
		СформироватьДанныеЗаказа(СсылкаНаОбъект, ПолнаяВыгрузка), 
		ПолнаяВыгрузка
	);
КонецФункции

Функция СформироватьДанныеЗаказа(СсылкаНаОбъект, ПолнаяВыгрузка)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказКлиента.Дата КАК Дата,
		|	ЗаказКлиента.Номер КАК Номер,
		|	ЗаказКлиента.Контрагент КАК Контрагент,
		|	ЗаказКлиента.Партнер КАК Партнер,
		|	ЗаказКлиента.Организация КАК Организация,
		|	ЗаказКлиента.Соглашение КАК Соглашение,
		|	ЗаказКлиента.Договор КАК Договор,
		|	ЗаказКлиента.Товары.(
		|		Номенклатура КАК Номенклатура,
		|		Характеристика КАК Характеристика,
		|		Количество КАК Количество,
		|		Цена КАК Цена,
		|		Сумма КАК Сумма
		|	) КАК Товары
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.Ссылка = &Ссылка";	
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);

	СписокСсылок = Новый Соответствие;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		СписокСсылок.Вставить(СсылкаНаОбъект, 0);	
		Возврат СписокСсылок;
	КонецЕсли;
	
	ВыборкаЗаказ = Результат.Выбрать();
	ВыборкаЗаказ.Следующий();
	
	Данные = Новый Соответствие;
	Данные.Вставить("number",		web_ОбщегоНазначения.ДобавитьЗначение(ВыборкаЗаказ.Номер));
	Данные.Вставить("date_time", 	web_ОбщегоНазначения.ДобавитьЗначение(ВыборкаЗаказ.Дата));
	Данные.Вставить("partner", 		web_ОбщегоНазначения.ДобавитьЗначение(ВыборкаЗаказ.Партнер));	
	Данные.Вставить("contractor", 	web_ОбщегоНазначения.ДобавитьЗначение(ВыборкаЗаказ.Контрагент));	
	Данные.Вставить("organization", web_ОбщегоНазначения.ДобавитьЗначение(ВыборкаЗаказ.Организация));	
	Данные.Вставить("agreement", 	web_ОбщегоНазначения.ДобавитьЗначение(ВыборкаЗаказ.Соглашение));
	Данные.Вставить("contract", 	web_ОбщегоНазначения.ДобавитьЗначение(ВыборкаЗаказ.Договор));	
	
	ВыборкаТЧ = ВыборкаЗаказ.Товары.Выбрать();	
	ДанныеТЧ = Новый Массив;
	Пока ВыборкаТЧ.Следующий() Цикл
		СтрокаТЧ = Новый Соответствие;
		СтрокаТЧ.Вставить("product",		web_ОбщегоНазначения.ДобавитьЗначение(ВыборкаТЧ.Номенклатура));
		СтрокаТЧ.Вставить("characteristic", web_ОбщегоНазначения.ДобавитьЗначение(ВыборкаТЧ.Характеристика));
		СтрокаТЧ.Вставить("price", 			web_ОбщегоНазначения.ДобавитьЗначение(ВыборкаТЧ.Цена));	
		СтрокаТЧ.Вставить("quantity", 		web_ОбщегоНазначения.ДобавитьЗначение(ВыборкаТЧ.Количество));	
		СтрокаТЧ.Вставить("total", 			web_ОбщегоНазначения.ДобавитьЗначение(ВыборкаТЧ.Сумма));
		
		ДанныеТЧ.Добавить(СтрокаТЧ);
	КонецЦикла;	
	Данные.Вставить("order_orders_detail", ДанныеТЧ);
	
	Данные.Вставить("from_frontend", Ложь);
	
	Возврат Данные;
КонецФункции

функция ДобавитьОбновитьЗаказ(ДанныеССайта) Экспорт
	Попытка
		ПК = ДанныеССайта.Получить("id");
		Если ПК = Неопределено Тогда
			ВызватьИсключение "Не задан ID заказа";
		КонецЕсли;
		
		ДокументСсылка = Документы.ЗаказКлиента.ПолучитьСсылку(Новый УникальныйИдентификатор(ПК));
		ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
		Если ДокументОбъект = Неопределено Тогда
			ДокументОбъект = Документы.ЗаказКлиента.СоздатьДокумент();
			ДокументОбъект.УстановитьСсылкуНового(ДокументСсылка);
			ДокументОбъект.ОбменДанными.Загрузка = Истина;
		КонецЕсли;
		
		МетаданныеРеквизитов = ПолучитьМетаданныеРеквизитов();
		Для Каждого ТекущийРеквизит Из МетаданныеРеквизитов Цикл
			ОбработатьРеквизит(ТекущийРеквизит, ДанныеССайта, ДокументОбъект);
		КонецЦикла;
		ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
		
		ЗаполнитьТовары(ДанныеССайта, ДокументОбъект);
		
		ДокументОбъект.web_ЗагруженССайта = Истина;		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		
		Возврат ДокументОбъект.Ссылка;
	Исключение
		Ошибка = ОписаниеОшибки();
		Сообщить(Ошибка);
		ЗаписьЖурналаРегистрации("Django", УровеньЖурналаРегистрации.Ошибка,,, Ошибка);
	
		Возврат Неопределено;	
	КонецПопытки;
КонецФункции

#КонецОбласти

#Область СлужебныеМетоды

Функция ПолучитьМетаданныеРеквизитов()
	Данные = Новый Соответствие;
	Данные.Вставить("date_time", 	ЗаполнитьСтруктуруРеквизита(Дата(1, 1, 1), "Дата"));
	Данные.Вставить("partner", 		ЗаполнитьСтруктуруРеквизита(Справочники.Партнеры, "Партнер"));
	Данные.Вставить("contractor", 	ЗаполнитьСтруктуруРеквизита(Справочники.Контрагенты, "Контрагент"));
	Данные.Вставить("organization",	ЗаполнитьСтруктуруРеквизита(Справочники.Организации, "Организация"));
	Данные.Вставить("contract", 	ЗаполнитьСтруктуруРеквизита(Справочники.ДоговорыКонтрагентов, "Договор", Ложь));
	Данные.Вставить("agreement", 	ЗаполнитьСтруктуруРеквизита(Справочники.СоглашенияСКлиентами, "Соглашение", Ложь));
	Возврат Данные;
КонецФункции

Функция ЗаполнитьСтруктуруРеквизита(ТипРеквизита, ИмяРеквизита, Обязательный = Истина)
	Возврат Новый Структура("ТипРеквизита, ИмяРеквизита, Обязательный", ТипРеквизита, ИмяРеквизита, Обязательный);
КонецФункции

Процедура ОбработатьРеквизит(ТекущийРеквизит, ДанныеССайта, ДокументОбъект)
	ИмяРеквизита = ТекущийРеквизит.Ключ;
	ДанныеРеквизита = ТекущийРеквизит.Значение;
	
	ЗначениеРеквизита = ДанныеССайта.Получить(ИмяРеквизита);
	Если ЗначениеРеквизита = Неопределено Тогда
		Если ДанныеРеквизита.Обязательный Тогда
			ВызватьИсключение СтрШаблон("Не заполнен обязательный реквизит ""%1""", ИмяРеквизита);	
		Иначе
			Возврат;
		КонецЕсли;		
	КонецЕсли;
	
	Если ТипЗнч(ДанныеРеквизита.ТипРеквизита) = Тип("Дата") Тогда
		ДокументОбъект[ДанныеРеквизита.ИмяРеквизита] = ЗначениеРеквизита;
		Возврат;
	КонецЕсли;
	
	СсылкаНаОбъект = ДанныеРеквизита.ТипРеквизита.ПолучитьСсылку(Новый УникальныйИдентификатор(ЗначениеРеквизита));
	ОбъектПоСсылке = СсылкаНаОбъект.ПолучитьОбъект();
	Если ОбъектПоСсылке = Неопределено Тогда
		Если ДанныеРеквизита.Обязательный Тогда
			ВызватьИсключение СтрШаблон("Ошибка получения значения реквизита ""%1"" по uuid: %2", ИмяРеквизита, ЗначениеРеквизита);	
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	ДокументОбъект[ДанныеРеквизита.ИмяРеквизита] = СсылкаНаОбъект;
КонецПроцедуры

Процедура ЗаполнитьТовары(ДанныеССайта, ДокументОбъект)
	Товары = ДанныеССайта.Получить("order_orders_detail");
	Если Товары = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТоварыТЗ = Новый ТаблицаЗначений;
	ТоварыТЗ.Колонки.Добавить("Номенклатура", 	Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТоварыТЗ.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТоварыТЗ.Колонки.Добавить("Цена", 			Новый ОписаниеТипов("Число"));
	ТоварыТЗ.Колонки.Добавить("Количество", 	Новый ОписаниеТипов("Число"));
	ТоварыТЗ.Колонки.Добавить("Сумма", 			Новый ОписаниеТипов("Число"));
	Для Каждого СтрокаССайта из Товары Цикл
		СоздатьСтрокуТовара(СтрокаССайта, ТоварыТЗ);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗагруженныеТовары.Номенклатура КАК Номенклатура,
		|	ЗагруженныеТовары.Характеристика КАК Характеристика,
		|	ЗагруженныеТовары.Цена КАК Цена,
		|	ЗагруженныеТовары.Количество КАК Количество,
		|	ЗагруженныеТовары.Сумма КАК Сумма
		|ПОМЕСТИТЬ ТоварыССайта
		|ИЗ
		|	&ЗагруженныеТовары КАК ЗагруженныеТовары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтавкиНДС.Ставка КАК Ставка,
		|	СтавкиНДСНоменклатурыСрезПоследних.СтавкаНДС КАК СтавкаНДС,
		|	СтавкиНДС.ПеречислениеСтавкаНДС КАК ПеречислениеСтавкаНДС,
		|	ТоварыССайта.Номенклатура КАК Номенклатура,
		|	ТоварыССайта.Характеристика КАК Характеристика,
		|	ТоварыССайта.Цена КАК Цена,
		|	ТоварыССайта.Количество КАК Количество,
		|	ТоварыССайта.Сумма КАК Сумма
		|ИЗ
		|	ТоварыССайта КАК ТоварыССайта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДСНоменклатуры.СрезПоследних(&Период, ) КАК СтавкиНДСНоменклатурыСрезПоследних
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтавкиНДС КАК СтавкиНДС
		|			ПО СтавкиНДСНоменклатурыСрезПоследних.СтавкаНДС = СтавкиНДС.Ссылка
		|		ПО ТоварыССайта.Номенклатура = СтавкиНДСНоменклатурыСрезПоследних.Номенклатура";
	Запрос.Параметры.Вставить("ЗагруженныеТовары", ТоварыТЗ);
	Запрос.Параметры.Вставить("Период", ДокументОбъект.Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ДокументОбъект.Товары.Очистить();
	
	ВариантОбеспечения = Перечисления.ВариантыОбеспечения.КОбеспечению;
	Пока Выборка.Следующий() Цикл
		СтрокаДокумента = ДокументОбъект.Товары.Добавить();
		СтрокаДокумента.Номенклатура = Выборка.Номенклатура;
		СтрокаДокумента.Характеристика = Выборка.Характеристика;
		СтрокаДокумента.Цена = Выборка.Цена;
		СтрокаДокумента.Количество = Выборка.Количество;
		СтрокаДокумента.КоличествоУпаковок = Выборка.Количество;
		СтрокаДокумента.Сумма = Выборка.Сумма;
		СтрокаДокумента.СтавкаНДС = Выборка.СтавкаНДС;
		СтрокаДокумента.ВариантОбеспечения = ВариантОбеспечения;
		Если Выборка.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.БезНДС ИЛИ Выборка.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС0 Тогда
			СтрокаДокумента.СуммаСНДС = Выборка.Сумма;
		ИначеЕсли ДокументОбъект.ЦенаВключаетНДС Тогда
			СтрокаДокумента.СуммаСНДС = Выборка.Сумма;
			СтрокаДокумента.СуммаНДС = Выборка.Сумма * Выборка.Ставка / (100 + Выборка.Ставка);
		Иначе
			СтрокаДокумента.СуммаСНДС = Выборка.Сумма * (100 + Выборка.Ставка) / 100;
			СтрокаДокумента.СуммаНДС = Выборка.Сумма * Выборка.Ставка / 100;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура СоздатьСтрокуТовара(СтрокаССайта, ТаблицаПриемник)
	ТоварUUID = СтрокаССайта.Получить("product");
	НоменклатураСсылка = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(ТоварUUID));
	НоменклатураОбъект = НоменклатураСсылка.ПолучитьОбъект();
	Если НоменклатураОбъект = Неопределено Тогда
		ВызватьИсключение СтрШаблон("Ошибка получения номенклатуры (uuid: %1)", ТоварUUID);
	КонецЕсли;	
	
	ХарактеристикаСсылка = Неопределено;
	Если НЕ НоменклатураОбъект.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать Тогда
		ХарактеристикаUUID = СтрокаССайта.Получить("characteristic");
		Если ХарактеристикаUUID = Неопределено Тогда
			ВызватьИсключение СтрШаблон("У номенклатуры %1 должна быть заполнена характеристика", НоменклатураОбъект.Представление);	 	
		КонецЕсли;
		
		ХарактеристикаСсылка = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(ХарактеристикаUUID));
		ХарактеристикаОбъект = ХарактеристикаСсылка.ПолучитьОбъект();
		Если ХарактеристикаОбъект = Неопределено Тогда
			ВызватьИсключение СтрШаблон("Ошибка получения характеристики (uuid: %1)", ХарактеристикаUUID);
		КонецЕсли;
	КонецЕсли;
	
	СтрокаТовара = ТаблицаПриемник.Добавить();
	СтрокаТовара.Номенклатура = НоменклатураСсылка;
	СтрокаТовара.Характеристика = ХарактеристикаСсылка;
	СтрокаТовара.Цена = Число(СтрокаССайта.Получить("price"));
	СтрокаТовара.Количество = Число(СтрокаССайта.Получить("quantity"));
	СтрокаТовара.Сумма = Число(СтрокаССайта.Получить("total"));
КонецПроцедуры

#КонецОбласти